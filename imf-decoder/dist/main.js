(()=>{"use strict";var e,t,o={},s={};function r(e){var t=s[e];if(void 0!==t)return t.exports;var n=s[e]={exports:{}};return o[e](n,n.exports,r),n.exports}async function n(){try{const e=await r.e(218).then(r.bind(r,218));if(await e.default(),console.log("📦 WASM Exports:",Object.keys(e)),!e.IMFDecoder)throw new Error("IMFDecoder not found in WASM module");const t=new e.IMFDecoder(640,480);return console.log("🔧 IMFDecoder Methods:",Object.getOwnPropertyNames(Object.getPrototypeOf(t))),console.log("🧪 Test method output:",t.test()),{success:!0,module:e,decoder:t}}catch(e){return console.error("❌ WASM verification failed:",e),{success:!1,error:e}}}async function c(e){try{console.log("Available methods:",Object.getOwnPropertyNames(Object.getPrototypeOf(e))),console.log("Initial test:",e.test()),console.log("Setting diagnostic mode..."),e.diagnostic_mode=!0,console.log("Diagnostic mode is now:",e.diagnostic_mode);const t={features:[{tensor:new Float32Array(524288).fill(.5),shape:[1,128,64,64]},{tensor:new Float32Array(262144).fill(.5),shape:[1,256,32,32]},{tensor:new Float32Array(131072).fill(.5),shape:[1,512,16,16]},{tensor:new Float32Array(32768).fill(.5),shape:[1,512,8,8]}],token:new Float32Array(32).fill(.1)};console.log("Setting reference data...");try{const o=await e.set_reference_data(t);console.log("Set reference data result:",o)}catch(t){throw console.error("Error setting reference data:",t),console.log("set_reference_data exists:",typeof e.set_reference_data),t}console.log("Processing tokens...");const o=[{token:new Float32Array(32).fill(.5),frame_index:0}];try{const t=await e.process_tokens(o);console.log("Process tokens result:",t)}catch(t){throw console.error("Error processing tokens:",t),console.log("process_tokens exists:",typeof e.process_tokens),t}console.log("Processing batch...");try{const t=await e.process_batch();console.log("Process batch result:",t)}catch(t){throw console.error("Error processing batch:",t),console.log("process_batch exists:",typeof e.process_batch),t}const s=e.get_reference_status();return console.log("Reference status:",s),{success:!0,message:"Tests completed successfully"}}catch(e){return console.error("Test sequence failed:",e),console.error("Stack:",e.stack),{success:!1,error:e instanceof Error?e.message:String(e)}}}async function i(){try{console.log("🔍 Starting WASM verification...");const{success:e,module:t,decoder:o,error:s}=await n();if(!e||!o)return console.error("Failed to initialize decoder:",s),void(s?.stack&&console.error("Stack:",s.stack));console.log("IMFDecoder instance:",o),console.log("✅ WASM verification successful!"),window.decoder=o,window.wasm=t,await c(o),console.log("IMFDecoder initialized successfully")}catch(e){console.error("Failed to initialize decoder:",e),e instanceof Error&&console.error("Stack:",e.stack);try{await wasm_module(),console.log("Available exports:",Object.keys(wasm_module))}catch(e){console.error("Failed to import WASM module:",e)}}}r.m=o,r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.f={},r.e=e=>Promise.all(Object.keys(r.f).reduce(((t,o)=>(r.f[o](e,t),t)),[])),r.u=e=>e+".js",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="imf-decoder:",r.l=(o,s,n,c)=>{if(e[o])e[o].push(s);else{var i,a;if(void 0!==n)for(var l=document.getElementsByTagName("script"),d=0;d<l.length;d++){var u=l[d];if(u.getAttribute("src")==o||u.getAttribute("data-webpack")==t+n){i=u;break}}i||(a=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,r.nc&&i.setAttribute("nonce",r.nc),i.setAttribute("data-webpack",t+n),i.src=o),e[o]=[s];var f=(t,s)=>{i.onerror=i.onload=null,clearTimeout(g);var r=e[o];if(delete e[o],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(s))),t)return t(s)},g=setTimeout(f.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=f.bind(null,i.onerror),i.onload=f.bind(null,i.onload),a&&document.head.appendChild(i)}},r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var s=o.length-1;s>-1&&(!e||!/^http(s?):/.test(e));)e=o[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{r.b=document.baseURI||self.location.href;var e={792:0};r.f.j=(t,o)=>{var s=r.o(e,t)?e[t]:void 0;if(0!==s)if(s)o.push(s[2]);else{var n=new Promise(((o,r)=>s=e[t]=[o,r]));o.push(s[2]=n);var c=r.p+r.u(t),i=new Error;r.l(c,(o=>{if(r.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var n=o&&("load"===o.type?"missing":o.type),c=o&&o.target&&o.target.src;i.message="Loading chunk "+t+" failed.\n("+n+": "+c+")",i.name="ChunkLoadError",i.type=n,i.request=c,s[1](i)}}),"chunk-"+t,t)}};var t=(t,o)=>{var s,n,[c,i,a]=o,l=0;if(c.some((t=>0!==e[t]))){for(s in i)r.o(i,s)&&(r.m[s]=i[s]);a&&a(r)}for(t&&t(o);l<c.length;l++)n=c[l],r.o(e,n)&&e[n]&&e[n][0](),e[n]=0},o=self.webpackChunkimf_decoder=self.webpackChunkimf_decoder||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",i):i();class a{constructor(){this.decoder=null,this.verifyButton=document.getElementById("verifyWasm"),this.testButton=document.getElementById("runTests"),this.clearButton=document.getElementById("clearLog"),this.statusDiv=document.getElementById("status"),this.logDiv=document.getElementById("log"),this.setupEventListeners(),this.interceptConsole()}setupEventListeners(){this.verifyButton.addEventListener("click",(()=>this.verifyWasm())),this.testButton.addEventListener("click",(()=>this.runTests())),this.clearButton.addEventListener("click",(()=>this.clearLog()))}interceptConsole(){const e=console.log,t=console.error;console.log=(...t)=>{this.log("log",...t),e.apply(console,t)},console.error=(...e)=>{this.log("error",...e),t.apply(console,e)}}log(e,...t){const o=document.createElement("div");o.className="error"===e?"error":"",o.textContent=t.map((e=>"object"==typeof e?JSON.stringify(e):String(e))).join(" "),this.logDiv.appendChild(o),this.logDiv.scrollTop=this.logDiv.scrollHeight}async verifyWasm(){try{this.verifyButton.disabled=!0,this.setStatus("Verifying WASM...","info");const e=await n();e.success&&e.decoder?(this.decoder=e.decoder,this.testButton.disabled=!1,this.setStatus("WASM verification successful!","success")):this.setStatus("WASM verification failed!","error")}catch(e){this.setStatus(`Error: ${e.message}`,"error")}finally{this.verifyButton.disabled=!1}}async runTests(){if(this.decoder)try{this.testButton.disabled=!0,this.setStatus("Running tests...","info");const e=await c(this.decoder);e.success?this.setStatus(e.message||"Tests completed successfully","success"):this.setStatus(`Tests failed: ${e.error}`,"error")}catch(e){this.setStatus(`Error: ${e.message}`,"error")}finally{this.testButton.disabled=!1}else this.setStatus("Please verify WASM first","error")}setStatus(e,t){this.statusDiv.textContent=e,this.statusDiv.className=`status ${t}`}clearLog(){this.logDiv.innerHTML=""}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>new a)):new a})();